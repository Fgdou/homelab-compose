services:
  warracker:
    image: ghcr.io/sassanix/warracker/main:0.10.1.5
    volumes:
      - /data/warracker/warracker_uploads:/data/uploads
    depends_on:
      warrackerdb:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - nas
      - warracker
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.warracker.rule=Host(`warracker.fgdou.ovh`)'
      - 'traefik.http.routers.warracker.entryPoints=websecure'
      - 'traefik.http.services.warracker.loadbalancer.server.port=80'
    environment:
        DB_HOST: warrackerdb
        DB_NAME: warranty_db
        DB_USER: warranty_user
        DB_PASSWORD: warranty_password
        SECRET_KEY: "${WARRACKER_SECRET_KEY}"
        FRONTEND_URL: https://warracker.fgdou.ovh
        APP_BASE_URL: https://warracker.fgdou.ovh
        WARRACKER_MEMORY_MODE: optimized
        MAX_UPLOAD_MB: 16
        NGINX_MAX_BODY_SIZE_VALUE: 16M
        OIDC_PROVIDER_NAME: oidc
        OIDC_CLIENT_ID: qwsh6xqOHAbazotUTADmjqIhoH4ymUbFPGiJrAFi
        OIDC_CLIENT_SECRET: ${WARRACKER_SECRET}
        OIDC_ISSUER_URL: https://auth.fgdou.ovh/application/o/warracker/
        OIDC_SCOPE: openid email profile
        PYTHONUNBUFFERED: 1

  warrackerdb:
    image: postgres:15-alpine
    volumes:
      - /data/warracker/postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U warranty_user -d warranty_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - warracker
    environment:
      POSTGRES_PASSWORD: warranty_password
      POSTGRES_USER: warranty_user
      POSTGRES_DB: warranty_db


networks:
  warracker:
  nas:
    external: true
