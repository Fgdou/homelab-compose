services:
  traefik:
    image: traefik:v3.5
    command:
      - "--providers.docker=true"
      - "--providers.docker.network=nas"
      - "--certificatesresolvers.letsencrypt.acme.email=fabigoardou@gmail.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpChallenge.entryPoint=web"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http.tls.certResolver=letsencrypt"
      - "--entrypoints.websecure.http.tls.domains[0].main=fgdou.ovh"
      - "--entrypoints.websecure.http.tls.domains[0].sans=*.fgdou.ovh"
      - "--entrypoints.ssh.address=:22"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.filename=/letsencrypt/config.yaml"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--serversTransport.insecureSkipVerify=true"
      - "--metrics.prometheus=true"
      - "--entryPoints.metrics.address=:8082"
      - "--metrics.prometheus.entryPoint=metrics"
    environment:
      CLOUDFLARE_EMAIL: ${CLOUDFLARE_EMAIL}
      CLOUDFLARE_API_KEY: ${CLOUDFLARE_API_KEY}
    ports:
      - 80:80
      - 443:443
      - 22:22
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /data/traefik:/letsencrypt
    networks:
      - nas
    restart: always
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.rule=Host(`traefik.fgdou.ovh`)'
      - 'traefik.http.routers.api.entryPoints=websecure'
      - 'traefik.http.routers.service=api@internal'
      - 'traefik.http.services.api.loadbalancer.server.port=8080'
      - 'traefik.http.routers.api.middlewares=authentik@docker'
networks:
  nas:
    external: true
